import org.junit.jupiter.api.Test;

import javax.xml.bind.DatatypeConverter;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAccessor;

public class TestClass {

    private static String smsString =
        "\n" +
            "+CMGL: 0,\"REC READ\",\"00410044002D00500048004F004E00500045\",,\"21/03/12,20:30:02+32\"\n" +
            "0033003800340036003800200069007300200079006F007500720020006F006E0065002000740069006D0065002000700061007300730077006F0072006400200074006F002000700072006F00630065006500640020006F006E002000500068006F006E006500500065002E002000490074002000690073002000760061006C0069006400200066006F00720020003100300020006D0069006E0075007400650073002E00200044006F0020006E006F007400200073006800610072006500200079006F007500720020004F005400500020007700690074006800200061006E0079006F006E0065002E\n" +
            "+CMGL: 1,\"REC READ\",\"00410041002D004100490052004700530046\",,\"21/03/12,20:02:33+22\"\n" +
n" +
            "+CMGL: 2,\"REC READ\",\"00410044002D004100490052004F0041004D\",,\"21/03/14,13:28:01+22\"\n" +
n" +
            "+CMGL: 3,\"REC READ\",\"00410044002D004100490052004F0041004D\",,\"21/03/14,13:28:01+22\"\n" +
n" +
            "+CMGL: 4,\"REC READ\",\"004A0044002D005000420046005600520054\",,\"21/03/14,16:32:34+32\"\n" +
n" +
            "+CMGL: 5,\"REC READ\",\"0054004D002D0050005A004400450041004C\",,\"21/03/16,17:06:13+32\"\n" +
            "0048006900210020004300690074006900620061006E006B0020006F0066006600650072007300200079006F00750020006100200050007200650020005100750061006C0069006600690065006400200063007200650064006900740020006300610072006400200077006900740068002000520073003200300030003000200041006D0061007A006F006E00200076006F0075006300680065007200200061007300200061002000770065006C0063006F006D0065002000620065006E0065006600690074002E0020004100700070006C007900200072006D006C002E006C0075002F00420047004E0042003400700020002D005400650061006D0020005000530042\n" +
            "+CMGL: 6,\"REC UNREAD\",\"00410044002D00500048004F004E00500045\",,\"21/03/16,18:01:58+32\"\n" +
            "0038003900330038003300200069007300200079006F007500720020006F006E0065002000740069006D0065002000700061007300730077006F0072006400200074006F002000700072006F00630065006500640020006F006E002000500068006F006E006500500065002E002000490074002000690073002000760061006C0069006400200066006F00720020003100300020006D0069006E0075007400650073002E00200044006F0020006E006F007400200073006800610072006500200079006F007500720020004F005400500020007700690074006800200061006E0079006F006E0065002E\n" +
            "\n" +
            "OK";

    @Test
    void testThis(){

        String[] strs = smsString.trim().replace("\"", "").split("(?:,)|(?:\n)");

        /**
            // These will be split in the multiples of 7. for example

            int i=1;
            for(String s: strs){
                System.out.println(i+"::: " +s );
                i++;
            }

            1::: +CMGL: 0
            2::: REC READ
            3::: 00410044002D00500048004F004E00500045
            4:::
            5::: 21/03/12
            6::: 20:30:02+32
            7::: 0033003800340036003800200069007300200079006F007500720020006F006E0065002000740069006D0065002000700061007300730077006F0072006400200074006F002000700072006F00630065006500640020006F006E002000500068006F006E006500500065002E002000490074002000690073002000760061006C0069006400200066006F00720020003100300020006D0069006E0075007400650073002E00200044006F0020006E006F007400200073006800610072006500200079006F007500720020004F005400500020007700690074006800200061006E0079006F006E0065002E

            8::: +CMGL: 1
            9::: REC READ
            10::: 00410041002D004100490052004700530046
            11:::
            12::: 21/03/12
            13::: 20:02:33+22


            15:::
            16::: OK
         */

        int groupLength = 7; // 1 SMS after the split logic above is split across 7 parts
        int totalSmsReceived = strs.length / groupLength;

        for(int i=0; i<totalSmsReceived; i++){
            System.out.println("------------");
            System.out.println("SMS# " + i);

            String from = new String( DatatypeConverter.parseHexBinary( strs[ (i * groupLength) + 2] ) );
            String at = strs[ (i * groupLength) + 4] + " " + strs[ (i * groupLength) + 5];
            String message = new String( DatatypeConverter.parseHexBinary( strs[ (i * groupLength) + 6] ));

            System.out.println("From: " + from);
            System.out.println("At: " + at) ;
            System.out.println("Message: " + message);
        }
    }

    @Test
    void convertStringToDate(){
//        String dateTime = "21/03/12 20:02:33+22";


            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yy/MM/dd HH:mm:ss");


            String timestamp = "21/03/12 20:02:33+22";

            String xx = timestamp.split("\\+")[0];
            System.out.println(xx);

            TemporalAccessor temporalAccessor = formatter.parse(xx);
            LocalDateTime localDateTime = LocalDateTime.from(temporalAccessor);
            ZonedDateTime zonedDateTime = ZonedDateTime.of(localDateTime, ZoneId.systemDefault());
            Instant result = Instant.from(zonedDateTime);
            System.out.println(result);

    }
}
